def print: extern value -> i32;

def main: proc -> i32 {
    // struct local to main 
    def ScaledVector: struct {
        def x: prop i32;
        def y: prop i32;

        def new: proc x y -> ScaledVector {
            def scale: proc -> i32 {
                return 1;
            };

            def result: var ScaledVector;

            result.x = scale() * x;
            result.y = scale() * y;

            return *result;
        };
        
        def add: proc self other -> ScaledVector {
            def result: var ScaledVector;

            result.x = *self.x + *other.x;
            result.y = *self.y + *other.y;

            return *result;
        };

        def sum: proc self -> i32 {
            return *self.x + *self.y;
        };
    };

    // proc local to main
    def CreateVec: proc -> ScaledVector {
        return ScaledVector.new(10, 10);
    };

    def vec1: var ScaledVector;
    def vec2: var ScaledVector;

    vec1 = ScaledVector.new(3, 4);
    vec2 = CreateVec();

    vec1 = ScaledVector.add(vec1, vec2);

    print(*vec1.x);
    print(*vec1.y);

    def test: var i32;

    if (*vec1.x) {
        test = 10;
    } else {
        test = 0;
    };

    print(*test);

    print(ScaledVector.sum(vec1));

    return 0;
};
